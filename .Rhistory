}
}
if (vector[[contador]]==10.5){
cuentaarriba <- cuentaarriba+1
}
if (vector[[contador]]==2.5){
cuentaabajo <- cuentaabajo+1
}
}
cuentaarriba
cuentaabajo
cuentaarriba <- 0
cuentaabajo <- 0
for (a  in 1:100){
z <- 5
contador <-1
v[[contador]] <- c(z)
while(z>=3 && z<=10){
moneda <- rbinom(1,1,0.5)
if (moneda==1){ #Caminata Aleatoria
z <- z + 0.5
v[[contador]] <- c(z)
contador <- contador +1
}else{
z <- z - 0.5
v[[contador]] <- c(z)
contador <- contador +1
}
}
if (v[[contador]]==10.5){
cuentaarriba <- cuentaarriba+1
}
if (v[[contador]]==2.5){
cuentaabajo <- cuentaabajo+1
}
}
cuentaarriba
cuentaabajo
cuentaarriba <- 0
cuentaabajo <- 0
for (a  in 1:100){
z <- 5
contador <- 1
v[[contador]] <- c(z)
while(z>=3 && z<=10){
moneda <- rbinom(1,1,0.5)
if (moneda==1){ #Caminata Aleatoria
z <- z + 0.5
v[[contador]] <- c(z)
contador <- contador +1
}else{
z <- z - 0.5
v[[contador]] <- c(z)
contador <- contador +1
}
if (v[[contador]]==10.5){
cuentaarriba <- cuentaarriba + 1
}
if (v[[contador]]==2.5){
cuentaabajo <- cuentaabajo + 1
}
}
}
cuentaarriba
cuentaabajo
cuentaarriba <- 0
cuentaabajo <- 0
for (a  in 1:100){
z <- 5
contador <- 1
bla[[contador]] <- c(z)
while(z>=3 && z<=10){
moneda <- rbinom(1,1,0.5)
if (moneda==1){ #Caminata Aleatoria
z <- z + 0.5
bla[[contador]] <- c(z)
contador <- contador +1
}else{
z <- z - 0.5
bla[[contador]] <- c(z)
contador <- contador +1
}
if (bla[[contador]]==10.5){
cuentaarriba <- cuentaarriba + 1
}
if (bla[[contador]]==2.5){
cuentaabajo <- cuentaabajo + 1
}
}
}
cuentaarriba
cuentaabajo
cuentaarriba <- 0
cuentaabajo <- 0
bla<-vector("numeric")
for (a  in 1:100){
z <- 5
i <- 1
bla[[i]] <- c(z)
while(z>=3 && z<=10){
moneda <- rbinom(1,1,0.5)
if (moneda==1){ #Caminata Aleatoria
z <- z + 0.5
bla[[i]] <- c(z)
i <- i +1
}else{
z <- z - 0.5
bla[[i]] <- c(z)
i <- i +1
}
if (bla[[i]]==10.5){
cuentaarriba <- cuentaarriba + 1
}
if (bla[[i]]==2.5){
cuentaabajo <- cuentaabajo + 1
}
}
}
cuentaarriba
cuentaabajo
cuentaarriba <- 0
cuentaabajo <- 0
bla<-vector("numeric")
for (p in 1:100){
z <- 5
i <- 1
bla[[i]] <- c(z)
while(z>=3 && z<=10){
moneda <- rbinom(1,1,0.5)
if (moneda==1){ #Caminata Aleatoria
z <- z + 0.5
bla[[i]] <- c(z)
i <- i + 1
}else{
z <- z - 0.5
bla[[i]] <- c(z)
i <- i + 1
}
if (bla[[i]]==10.5){
cuentaarriba <- cuentaarriba + 1
}
if (bla[[i]]==2.5){
cuentaabajo <- cuentaabajo + 1
}
}
}
cuentaarriba
cuentaabajo
mayor<-0
menor<-0
for (j in 1 :100){
z<- 5
i=1
x[[i]]<-c(z)
while (z>=3 && z<=10){
moneda <- rbinom(1,1,0.5)
if (moneda==1){ #Caminata aleatoria
z<-z+0.5
x[[i]]<-c(z)
i=i+1
}else {
z<-z-0.5
x[[i]]<-c(z)
i=i+1
}
if (x[[i]]==10.5){
mayor=mayor+1
}
if (x[[i]]==2.5){
menor=menor+1
}
}
}
mayor
menor
cuentaarriba <- 0
cuentaabajo <- 0
bla<-vector("numeric")
for (p in 1:100){
z <- 5
i <- 1
bla[[i]] <- c(z)
while(z>=3 && z<=10){
moneda <- rbinom(1,1,0.5)
if (moneda==1){ #Caminata Aleatoria
z <- z + 0.5
bla[[i]] <- c(z)
i <- i + 1
}else{
z <- z - 0.5
bla[[i]] <- c(z)
i <- i + 1
}
if (bla[[i]]==10.5){
cuentaarriba <- cuentaarriba + 1
}
if (bla[[i]]==2.5){
cuentaabajo <- cuentaabajo + 1
}
}
}
cuentaarriba
cuentaabajo
cuentaarriba <- 0
cuentaabajo <- 0
for (a in 1:100){
z <- 5
i= 1
bla[[i]] <- c(z)
while(z>=3 && z<=10){
moneda <- rbinom(1,1,0.5)
if (moneda==1){ #Caminata Aleatoria
z <- z + 0.5
bla[[i]] <- c(z)
i <- i + 1
}else{
z <- z - 0.5
bla[[i]] <- c(z)
i <- i + 1
}
if (bla[[i]]==10.5){
cuentaarriba <- cuentaarriba + 1
}
if (bla[[i]]==2.5){
cuentaabajo <- cuentaabajo + 1
}
}
}
cuentaarriba
cuentaabajo
cuentaarriba <- 0
cuentaabajo <- 0
for (a in 1:100){
z <- 5
i= 1
bla[[i]] <- c(z)
while(z>=3 && z<=10){
moneda <- rbinom(1,1,0.5)
if (moneda==1){ #Caminata Aleatoria
z <- z + 0.5
bla[[i]] <- c(z)
i=i + 1
}else{
z <- z - 0.5
bla[[i]] <- c(z)
i= i + 1
}
if (bla[[i]]==10.5){
cuentaarriba=cuentaarriba + 1
}
if (bla[[i]]==2.5){
cuentaabajo= cuentaabajo + 1
}
}
}
cuentaarriba
cuentaabajo
mayor<-0
menor<-0
for (j in 1 :100){
z<- 5
i=1
x[[i]]<-c(z)
while (z>=3 && z<=10){
moneda <- rbinom(1,1,0.5)
if (moneda==1){ #Caminata aleatoria
z<-z+0.5
x[[i]]<-c(z)
i=i+1
}else {
z<-z-0.5
x[[i]]<-c(z)
i=i+1
}
if (x[[i]]==10.5){
mayor=mayor+1
}
if (x[[i]]==2.5){
menor=menor+1
}
}
}
mayor
menor
s<-0
t<-0
for(i in 1:100){
z <- 5
ce<-vector("numeric")
while (z >= 3 && z <= 10) {
moneda <- rbinom(1,1,0.5) #Genera números aleatorios
if (moneda == 1){#Caminata Aleatoria
z <- z + 0.5
} else {
z <- z - 0.5
}
ce<-c(z)
if (ce<3){
s <- s + 1
} else { if( ce>10){
t <- t + 1
}
}
}
}
s<-0
t<-0
for(i in 1:100){
z <- 5
ce<-vector("numeric")
while (z >= 3 && z <= 10) {
moneda <- rbinom(1,1,0.5) #Genera números aleatorios
if (moneda == 1){#Caminata Aleatoria
z <- z + 0.5
} else {
z <- z - 0.5
}
ce<-c(z)
if (ce<3){
s <- s + 1
} else { if( ce>10){
t <- t + 1
}
}
}
}
s #Donde s es "abajo".
t #Donde t es "arriba".
cuentaarriba <- 0
cuentaabajo <- 0
bla<-vector("numeric")
for (p in 1:100){
z <- 5
while(z>=3 && z<=10){
moneda <- rbinom(1,1,0.5)
if (moneda==1){ #Caminata Aleatoria
z <- z + 0.5
}else{
z <- z - 0.5
}
if (bla(z)==10.5){
cuentaarriba <- cuentaarriba + 1
}
if (bla(z)==2.5){
cuentaabajo <- cuentaabajo + 1
}
}
}
cuentaarriba
cuentaabajo
cuentaarriba <- 0
cuentaabajo <- 0
bla <-vector("numeric")
for (p in 1:100){
z <- 5
while(z>=3 && z<=10){
moneda <- rbinom(1,1,0.5)
if (moneda==1){ #Caminata Aleatoria
z <- z + 0.5
}else{
z <- z - 0.5
}
bla <- c(z)
if (bla(z)==10.5){
cuentaarriba <- cuentaarriba + 1
}
if (bla(z)==2.5){
cuentaabajo <- cuentaabajo + 1
}
}
}
cuentaarriba
cuentaabajo
cuentaarriba <- 0
cuentaabajo <- 0
bla <-vector("numeric")
for (p in 1:100){
z <- 5
while(z>=3 && z<=10){
moneda <- rbinom(1,1,0.5)
if (moneda==1){ #Caminata Aleatoria
z <- z + 0.5
}else{
z <- z - 0.5
}
bla <- c(z)
if (bla==10.5){
cuentaarriba <- cuentaarriba + 1
}
if (bla==2.5){
cuentaabajo <- cuentaabajo + 1
}
}
}
cuentaarriba
cuentaabajo
cuentaarriba <- 0
cuentaabajo <- 0
bla <-vector("numeric")
for (p in 1:100){
z <- 5
while(z>=3 && z<=10){
moneda <- rbinom(1,1,0.5)
if (moneda==1){ #Caminata Aleatoria
z <- z + 0.5
}else{
z <- z - 0.5
}
bla <- c(z)
if (bla==10.5){
cuentaarriba <- cuentaarriba + 1
}
if (bla==2.5){
cuentaabajo <- cuentaabajo + 1
}
}
}
cuentaarriba
cuentaabajo
if (cuentaarriba>cuentaabajo){
x<- "Salió más veces por arriba"
x
else
x <- "Salió más veces por abajo"
x
}
cuentaarriba <- 0
cuentaabajo <- 0
bla <-vector("numeric")
for (p in 1:100){
z <- 5
while(z>=3 && z<=10){
moneda <- rbinom(1,1,0.5)
if (moneda==1){ #Caminata Aleatoria
z <- z + 0.5
}else{
z <- z - 0.5
}
bla <- c(z)
if (bla==10.5){
cuentaarriba <- cuentaarriba + 1
}
if (bla==2.5){
cuentaabajo <- cuentaabajo + 1
}
}
}
cuentaarriba
cuentaabajo
suma2 <- function(x,y){
x + y
}
mayor10 <- function(x){
x[x>10]
}
mayor10(runif(100,5,15))
promedioCol <- function(x, quitar.NA= TRUE){
nc <- ncol(x)
medias <- vector("numeric",nc)
for (i in 1:nc){
medias[i] <- mean(x[,i], na.rm=quitar.NA)
}
}
promedioCol(c(1,2,3,na))
promedioCol(c(1,2,3,NA))
promedioCol <- function(x, quitar.NA= TRUE){
nc <- ncol(x)
medias <- vector("numeric",nc)
for (i in 1:nc){
medias[i] <- mean(x[,i], na.rm=quitar.NA)
}
}
promedioCol <- function(x, quitar.NA= TRUE){
nc <- ncol(x)
medias <- vector("numeric",nc)
for (i in 1:nc){
medias[i] <- mean(x[,i], na.rm=quitar.NA)
}
medias
}
promedioCol(as.matrix(c(1,2,3,NA)))
f <- function(a,b){
a^2
}
f(2)
f(2,NA)
f(2,1)
f <- function(a,b){
print(a)
print(b)
}
?plot
?colapse
?paste
m <- matrix(1:6,3,3, T)
m
class(m)
str(m)
dim(m) <- c(2,5)
x <- factor(c("si","no","si","si","no","si","no"))
x
?lm
?unclass
?unclass
x <- factor(c("si","no","si","si","no","si","no"))
x
table(x)
unclass(x)
x <- factor(c("si","no","si","si","no","si","no"), levels=c("si","no"))
unclass(x)
getwd
setwd("/Users/Laura/Documents/Programacion_Actuarial_III")
