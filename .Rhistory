?rnorm
help.search("rnorm")
args(rnorm)
rnorm(100)
set.seed(1)
rnorm(10)
Encabezado
a <- available.packages()
head(a,3)
head(rownames(a),3)
n <- signif(nrow(a),2)
n
install.packages("ggplot2")
source("http://bioconductor.org/biocLite.R")
installed.packages()
library(ggplot2)
required(ggplot2)
require(ggplot2)
install.packages("RTools")
install.packages("devtools")
install.packages("rmarkdown")
clear
x<-1
print(x)
x
msg <- "Hola"
msg
x  <-##Esto es un comentario
2
x
x <-1:20
x
?vector
a<- vector(mode="numeric",length=5)
1/3
1L/3
class(1)
class(1L)
attributes(airquality)
#Clase del 25/08/2016
#Crear vectores
x<- vector(mode="numeric",length= 5L)
x
x <- c(0.5,0.6)
x
class(x)
x<- c(TRUE, FALSE)
x
x<- c(TRUE, FALSE, T, F)
x
class(x)
x <- 5:10
x
class(x)
x<- c(1+2i,5,3+9i,-4-5i)
x
classs(x)
x<- c(1+2i,5,3+9i,-4-5i)
x
class(x)
x <-c("a","b","d","e")
x
classs(x)
x <-c("a","b","d","e")
x
class(x)
y<- c(TRUE, 10L, 8.5, 1+1i, "Nacho")
y
class (y)
<- 0:6
class(z)
z <- 0:6
class(z)
s.numeric(z)
as.numeric(z)
as.logical(z)
as.character(z)
z <- c(1+2i, 3+4i, 8, 0+3i)
as.logical(z)
z <- c(1+2i, 3+4i, 8, 0+3i,0)
as.logical(z)
z <- c("Programación", "Actuarial" "III")
as.numeric(z)
as.numeric(z)
as.logical(z)
as.complex(z)
x <- list(1,"a", TRUE, 1+4i)
x
x <- list(1,"a", TRUE, 1+4i,1:100)
x
class(x)
?matriz
matrix
?matrix
m <-matrix(nrow=2, ncol=3)
m
dim(m)
attributes(m)
m <-matrix(nrow=2, ncol=3)
m
dim(m)
attributes(m)
dim(m) <-c(3,2)
m
m <- matrix(1:6,3,2)
m
m <- matrix(1:6,3,2, TRUE)
m
m <- matrix(1:6,3,3, T)
m
m <- matrix(1:6,3,3, T)
m
class(m)
m <- matrix(1:6,3,3, T)
m
class(m)
str(m)
dim(m) <- c(2,5)
x <- c(1,2,3)
y <- c("a", "b", "c")
z <- c(x,y)
z
x <- c(1,2,3)
y <- c("a", "b", "c")
z <- c(x,y)
z
x <- c(1,2,3)
m1 <- rbind(m,x)
m1
m2 <-cbind(m,x)
m2
m3 <- rbind(m.y)
m3
m3 <- rbind(m,y)
m3
m4 <- cbind(m,y)
m4
rbind(m1,y)
cbind(m2,y)
?rcuality
?sapply
data <- read.csv("table.csv")
data <- read.table("table.csv",T,",",nrows=100,skip=5)#Actividad
clases <-sapply(data,class)
data <- read.table("table.csv",T,",",colClasses = clases)
data
y <- data.frame(a=1,b="a")
dpuy(y)
y <- data.frame(a=1,b="a")
dput(y)
dput(y,file="y.R")
dput(y,file="y.R")
y
nueva.y
nueva.y <-dget("y.R")
y
nueva.y
x <- "Programación Actuarial III"
y <- data.frame(a=1, b="a")
dump(c("x","y"),file= "data.R")
x <- "Programación Actuarial III"
y <- data.frame(a=1, b="a")
dump(c("x","y"),file= "data.R")
x
rm(x,y)
x
source("data.R")
x
y
head(airquality)
setwd()
getwd
getwd
get()
getwd()
setwd("/Users/Laura/Documents/Programacion_Actuarial_III")
getwd()
bla <-head(airquality)
dput(bla,file="airquality.R")
con <- url("http://www.fcfm.buap.mx/","r")
x <- readlines(con,7)
x <-readLines(con,7)
x
x<- c("a","b","c","c","d","e")
#Veamos el vector
x
#Extraemos elementos con []
x[1]
x[2]
#También podemos extraer una secuencia de elementos
x[1:4]
#Es posible extraer una secuencia de elementos que cumplen una restricción
x[x>"b"]
#De manera equivalente se spuede obtener un vector lógico
u <- x == "c"
u
x[u]
#Creamos una lista
x <- list(foo= 1:4, bar= 0.6)
#Extraemos el primer elemento de la lista
#este elemento es una lista que contiene una secuencia
x[1]
#Extraemos nuevamente el primer elemento de la lista,
#ahora el elemento es la secuencia en sí
x[[1]]
#Extraemos un elemento por nombre
x$bar
x[["bar"]]
x["bar"]
