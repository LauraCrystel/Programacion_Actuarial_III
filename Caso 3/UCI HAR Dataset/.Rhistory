stopwatch()
DT <- data.table(x=rep(letters[1:3],each=100),y=rnorm(300))
setkey(DT,x)
DT['a']
library(data.table)
DT <- data.table(x=rep(letters[1:3],each=100),y=rnorm(300))
setkey(DT,x)
DT['a']
set.seed(1)
df_gde <- data.frame(x=rnorm(1E6),y=rnorm(1E6))
file <- tempfile()
write.table(df_gde,file=file,row.names = F,col.names = T,sep="\t",quote=F)
system.time(fread(file))
system.time(read.table(file,header = T,sep="\t"))
?tempfile
install.package("RMySQL")
ucscDb <- dbConnect(MySQL(),user="genome",host="genome-mysql.cse.ucsc.edu")
result <- dbGetQuerey(ucscDb,"show databasess;");dbDisconnect(ucscDb)
result
install.packages("RMySQL")
ucscDb <- dbConnect(MySQL(),user="genome",host="genome-mysql.cse.ucsc.edu")
result <- dbGetQuerey(ucscDb,"show databasess;");dbDisconnect(ucscDb)
result
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
created
biocLite("rhdf5")
library(rhddf5)
created= h5createFile("example.h5")
created
set.seed(13435)
x <- data.frame("var1"=sample(1:5),"var2"=sample(6:10),"var3"=sample(11:15)
set.seed(13435)
x <- data.frame("var1"=sample(1:5),"var2"=sample(6:10),"var3"=sample(11:15))
x
x <- x[sample(1:5),]
x
x$var2[c(1,3)]=NA
x
x[,"var1"]
x
x[,"var1"]
x
x$var2[c(1,2)]
x[1:2,"var2"]
x[x$var1<=3 & x$var3>11,]
x[x$var1<=3 && x$var3>11,]
sort(x$var1)
sort(x$var1,deacreasing=T)
sort(x$var1,decreasing=T)
sort(x$var2)
sort(x$var2,decreasing=T)
?sort
sort(x$var2,decreasing=T,na.rm=F)
sort(x$var2,na.last = F)
sort(x$var2,decreasing=T,na.last = T)
order(x$var1)
order(x$var1)
x
x[order(x$var1),]
x[order(x$var1,na.last = F,decreasing = T),]
x[order(x$var1,na.last = F,decreasing = T),]
x[order(x$var1,decreasing = T,na.last = F),]
x[order(x$var2,decreasing = T,na.last = F),]
library(plyr)
install.packages("plyr")
install.packages("plyr")
arrange(x,var1)
arrange(x,desc(var1))
?cvine
?cbind
x
x$var4 <-rnorm(5)
x
cbind(x,rnorm(5))
table(data$zipCode,useNA = "ifany")
table(data$councilDistrict,data$zipCode)
if(!dir.exists("data")){dir.create("data")}
url<-"https://data.baltimorecity.gov/api/views/k5ry-ef3g/rows.csv?accesType=DOWNLOAD"
download.file(url,"./data/restaurantes.csv")
data<-read.csv("./data/restaurantes.csv")
table(data$zipCode,useNA="ifany")
table(data$councilDistrict,data$zipCode)
sum(is.na(data$councilDistrict))
any(is.na(data$councilDistrict))#evalua un o entre todos los elementos del vector
all(!is.na(data$councilDistrict))
all(data$zipCode >0)#revisión de datos
colSums(is.na(data))
all(colSumns(is.na(data))==0)
all(colSums(is.na(data))==0)#
table(data$zipCode %in% c("21212"))
table(data$zipCode %in% c("21212","21213"))
data[data$zipCode %in% c("21212","21213")]
data[data$zipCode %in% c("21212","21213"),]
data(UCBAdmissions)
DF = as.data.frame(UCBAdmissions)
summary(DF)
xt <- xtabs(Freq~Gener+Admit,data=DF)
xt
data("UCBAdmissions")
DF = as.data.frame(UCBAdmissions)
summary(DF)
xt <- xtabs(Freq~Gener+Admit,data=DF)
xt
data("UCBAdmissions")
DF = as.data.frame(UCBAdmissions)
summary(DF)
xt <- xtabs(Freq~Gender+Admit,data=DF)
xt
warpbreaks$replicate <- rep(1,9,len=54)
xt = xtabs(breaks~.,data=warpbreaks)
xt
length(warpbreaks)
warpbreaks$replicate <- rep(1,9,len=54)
xt = xtabs(breaks~.,data=warpbreaks)
xt
warpbreaks$replicate <- rep(1:9,len=54)
xt = xtabs(breaks~.,data=warpbreaks)
xt
ftable(xt)
fakeData = rnorm(1e5)
objects.size(fakeData)
print(object.size(fakeData),units="Mb")
fakeData = rnorm(1e5)
object.size(fakeData)
print(object.size(fakeData),units="Mb")
s1 <-seq(1,10,by=2);s1
s2 <- seq(1,10,by=3);s2
x <- c(1,3,8,25,100);seq(along=x)
data$cerca <- data$neighborhood %in% c("Roland Park","Homeland")
table(data$cerca)
head(data)
data$zipError <- ifelse(data$zipCode < 0, TRUE,FALSE)
data[data$zipError,]
table(data$zipError,data$zipCode < 0)
data$zipGrupo <- cut(data$zipCode, breaks = quantile(data$zipCode))
table(data$zipGrupo)
table(data$zipGrupo,data$zipCode)
install.packages("Hmisc")
library(Hmisc)
data$zipGrupo <- cut2(data$zipCode,g=4)
table(data$zipGrupo)
data$zcf <- factor(data$zipCode)
data¢zcf[1:10]
class(data$zcf)
data¢zipCode[1:10]
class(data$zipCode)
data$zcf <- factor(data$zipCode)
data$zcf[1:10]
class(data$zcf)
data$zipCode[1:10]
class(data$zipCode)
set.seed(1)
yesno <- sample(c("si","no"), size=10, replace=TRUE)
yesnofac <- factor(yesno,levels = c("si","no"))
yesno
yesnofac
relevel(yesnofac,ref="no")
as.numeric(yesnofac)
as.numeric(relevel(yesnofac,ref="no"))
library(Hmisc); library(plyr)
data2 <- mutate(data,zipGrupo=cut2(zipCode,g=4))
table(data2$zipGrupo)
?mutate
?signif
?triangule
??triangule
?long.triangule
??long.triangule
?chainladder
??chainladder
?ChainLadder
??ChainLadder
install.packages("ChainLadder")
?apply
?t
?apply
?sapply
library(ChainLadder)
?function
?ruta
?function
?function()
setwd("/Users/Laura/Documents/Programacion_Actuarial_III/UCI HAR Dataset")
analizarArchivo <- function(ruta) {
featuresName <- read.table(paste(getwd(), "/features.txt", sep=""))[,2]
#wanted1 <- grepl("mean", featuresName)
#wanted2 <- grepl("std", featuresName)
wanted <- grepl('-(mean|std)\\(', featuresName)
data <- read.table(ruta)
colnames(data) <- featuresName
resultData <- subset(data, select=wanted)
return (resultData)
}
agregarActividades <- function(mergedData) {
actTest <- read.table(paste(getwd(), "/test/y_test.txt", sep=""))
actTrain <- read.table(paste(getwd(), "/train/y_train.txt", sep=""))
activities <- rbind(actTest, actTrain)[,1]
labels <- c("WALKING", "WALKING_UPSTAIRS", "WALKING_DOWNSTAIRS", "SITTING", "STANDING",
"LAYING")
activities <- labels[activities]
data <- cbind(Actividad = activities, mergedData)
return(data)
}
agregarSujetos <- function(mergedData) {
subjTest <- read.table(paste(getwd(), "/test/subject_test.txt", sep=""))
subjTrain <- read.table(paste(getwd(), "/train/subject_train.txt", sep=""))
subjects <- rbind(subjTest, subjTrain)[,1]
data <- cbind(Sujeto = subjects, mergedData)
return(data)
}
generarArchivo <- function(mergedData) {
library(dplyr)
data <- mergedData %>% group_by(Sujeto, Actividad) %>% summarise_each(funs(mean))
write.table(data, row.name = FALSE, file = "clearData.txt")
}
data1 <- analizarArchivo(paste(getwd(), "/test/X_test.txt", sep=""))
data2 <- analizarArchivo(paste(getwd(), "/train/X_train.txt", sep=""))
mergedData <- rbind(data1, data2)
colnames(mergedData) <- gsub("mean", "Media", colnames(mergedData))
colnames(mergedData) <- gsub("std", "STD", colnames(mergedData))
colnames(mergedData) <- gsub("t", "Tiempo", colnames(mergedData))
colnames(mergedData) <- gsub("f", "Frecuencia", colnames(mergedData))
colnames(mergedData) <- gsub("BodyBody", "Cuerpo", colnames(mergedData))
colnames(mergedData) <- gsub("Body", "Cuerpo", colnames(mergedData))
mergedData <- agregarActividades(mergedData)
mergedData <- agregarSujetos(mergedData)
generarArchivo(mergedData)
?function
?dplyr
?dplyr
install.packages("dplyr")
install.packages("dplyr")
setwd("/Users/Laura/Documents/Programacion_Actuarial_III/UCI HAR Dataset")
analizarArchivo <- function(ruta) {
featuresName <- read.table(paste(getwd(), "/features.txt", sep=""))[,2]
#wanted1 <- grepl("mean", featuresName)
#wanted2 <- grepl("std", featuresName)
wanted <- grepl('-(mean|std)\\(', featuresName)
data <- read.table(ruta)
colnames(data) <- featuresName
resultData <- subset(data, select=wanted)
return (resultData)
}
agregarActividades <- function(mergedData) {
actTest <- read.table(paste(getwd(), "/test/y_test.txt", sep=""))
actTrain <- read.table(paste(getwd(), "/train/y_train.txt", sep=""))
activities <- rbind(actTest, actTrain)[,1]
labels <- c("WALKING", "WALKING_UPSTAIRS", "WALKING_DOWNSTAIRS", "SITTING", "STANDING",
"LAYING")
activities <- labels[activities]
data <- cbind(Actividad = activities, mergedData)
return(data)
}
agregarSujetos <- function(mergedData) {
subjTest <- read.table(paste(getwd(), "/test/subject_test.txt", sep=""))
subjTrain <- read.table(paste(getwd(), "/train/subject_train.txt", sep=""))
subjects <- rbind(subjTest, subjTrain)[,1]
data <- cbind(Sujeto = subjects, mergedData)
return(data)
}
generarArchivo <- function(mergedData) {
library(dplyr)
data <- mergedData %>% group_by(Sujeto, Actividad) %>% summarise_each(funs(mean))
write.table(data, row.name = FALSE, file = "clearData.txt")
}
data1 <- analizarArchivo(paste(getwd(), "/test/X_test.txt", sep=""))
data2 <- analizarArchivo(paste(getwd(), "/train/X_train.txt", sep=""))
mergedData <- rbind(data1, data2)
colnames(mergedData) <- gsub("mean", "Media", colnames(mergedData))
colnames(mergedData) <- gsub("std", "STD", colnames(mergedData))
colnames(mergedData) <- gsub("t", "Tiempo", colnames(mergedData))
colnames(mergedData) <- gsub("f", "Frecuencia", colnames(mergedData))
colnames(mergedData) <- gsub("BodyBody", "Cuerpo", colnames(mergedData))
colnames(mergedData) <- gsub("Body", "Cuerpo", colnames(mergedData))
mergedData <- agregarActividades(mergedData)
mergedData <- agregarSujetos(mergedData)
generarArchivo(mergedData)
mergedData
setwd("/Users/Laura/Documents/Programacion_Actuarial_III/UCI HAR Dataset")
analizarArchivo <- function(ruta) {
featuresName <- read.table(paste(getwd(), "/features.txt", sep=""))[,2]
#wanted1 <- grepl("mean", featuresName)
#wanted2 <- grepl("std", featuresName)
wanted <- grepl('-(mean|std)\\(', featuresName)
data <- read.table(ruta)
colnames(data) <- featuresName
resultData <- subset(data, select=wanted)
return (resultData)
}
agregarActividades <- function(mergedData) {
actTest <- read.table(paste(getwd(), "/test/y_test.txt", sep=""))
actTrain <- read.table(paste(getwd(), "/train/y_train.txt", sep=""))
activities <- rbind(actTest, actTrain)[,1]
labels <- c("WALKING", "WALKING_UPSTAIRS", "WALKING_DOWNSTAIRS", "SITTING", "STANDING",
"LAYING")
activities <- labels[activities]
data <- cbind(Actividad = activities, mergedData)
return(data)
}
agregarSujetos <- function(mergedData) {
subjTest <- read.table(paste(getwd(), "/test/subject_test.txt", sep=""))
subjTrain <- read.table(paste(getwd(), "/train/subject_train.txt", sep=""))
subjects <- rbind(subjTest, subjTrain)[,1]
data <- cbind(Sujeto = subjects, mergedData)
return(data)
}
generarArchivo <- function(mergedData) {
library(dplyr)
data <- mergedData %>% group_by(Sujeto, Actividad) %>% summarise_each(funs(mean))
write.table(data, row.name = FALSE, file = "clearData.txt")
}
data1 <- analizarArchivo(paste(getwd(), "/test/X_test.txt", sep=""))
data2 <- analizarArchivo(paste(getwd(), "/train/X_train.txt", sep=""))
mergedData <- rbind(data1, data2)
colnames(mergedData) <- gsub("mean", "Media", colnames(mergedData))
colnames(mergedData) <- gsub("std", "STD", colnames(mergedData))
colnames(mergedData) <- gsub("t", "Tiempo", colnames(mergedData))
colnames(mergedData) <- gsub("f", "Frecuencia", colnames(mergedData))
colnames(mergedData) <- gsub("BodyBody", "Cuerpo", colnames(mergedData))
colnames(mergedData) <- gsub("Body", "Cuerpo", colnames(mergedData))
mergedData <- agregarActividades(mergedData)
mergedData <- agregarSujetos(mergedData)
a <-generarArchivo(mergedData)
a
setwd("/Users/Laura/Documents/Programacion_Actuarial_III/UCI HAR Dataset")
analizarArchivo <- function(ruta) {
featuresName <- read.table(paste(getwd(), "/features.txt", sep=""))[,2]
#wanted1 <- grepl("mean", featuresName)
#wanted2 <- grepl("std", featuresName)
wanted <- grepl('-(mean|std)\\(', featuresName)
data <- read.table(ruta)
colnames(data) <- featuresName
resultData <- subset(data, select=wanted)
return (resultData)
}
agregarActividades <- function(mergedData) {
actTest <- read.table(paste(getwd(), "/test/y_test.txt", sep=""))
actTrain <- read.table(paste(getwd(), "/train/y_train.txt", sep=""))
activities <- rbind(actTest, actTrain)[,1]
labels <- c("WALKING", "WALKING_UPSTAIRS", "WALKING_DOWNSTAIRS", "SITTING", "STANDING",
"LAYING")
activities <- labels[activities]
data <- cbind(Actividad = activities, mergedData)
return(data)
}
agregarSujetos <- function(mergedData) {
subjTest <- read.table(paste(getwd(), "/test/subject_test.txt", sep=""))
subjTrain <- read.table(paste(getwd(), "/train/subject_train.txt", sep=""))
subjects <- rbind(subjTest, subjTrain)[,1]
data <- cbind(Sujeto = subjects, mergedData)
return(data)
}
generarArchivo <- function(mergedData) {
library(dplyr)
data <- mergedData %>% group_by(Sujeto, Actividad) %>% summarise_each(funs(mean))
write.table(data, row.name = FALSE, file = "clearData.txt")
}
data1 <- analizarArchivo(paste(getwd(), "/test/X_test.txt", sep=""))
data2 <- analizarArchivo(paste(getwd(), "/train/X_train.txt", sep=""))
mergedData <- rbind(data1, data2)
colnames(mergedData) <- gsub("mean", "Media", colnames(mergedData))
colnames(mergedData) <- gsub("std", "STD", colnames(mergedData))
colnames(mergedData) <- gsub("t", "Tiempo", colnames(mergedData))
colnames(mergedData) <- gsub("f", "Frecuencia", colnames(mergedData))
colnames(mergedData) <- gsub("BodyBody", "Cuerpo", colnames(mergedData))
colnames(mergedData) <- gsub("Body", "Cuerpo", colnames(mergedData))
mergedData <- agregarActividades(mergedData)
mergedData <- agregarSujetos(mergedData)
generarArchivo(mergedData)
?gsub
?return
?grepl
?subset
?return
setwd("/Users/Laura/Documents/Programacion_Actuarial_III/UCI HAR Dataset")
analizarArchivo <- function(ruta) {
featuresName <- read.table(paste(getwd(), "/features.txt", sep=""))[,2]
#wanted1 <- grepl("mean", featuresName)
#wanted2 <- grepl("std", featuresName)
wanted <- grepl('-(mean|std)\\(', featuresName)
data <- read.table(ruta)
colnames(data) <- featuresName
resultData <- subset(data, select=wanted)
return (resultData)
}
agregarActividades <- function(mergedData) {
actTest <- read.table(paste(getwd(), "/test/y_test.txt", sep=""))
actTrain <- read.table(paste(getwd(), "/train/y_train.txt", sep=""))
activities <- rbind(actTest, actTrain)[,1]
labels <- c("WALKING", "WALKING_UPSTAIRS", "WALKING_DOWNSTAIRS", "SITTING", "STANDING",
"LAYING")
activities <- labels[activities]
data <- cbind(Actividad = activities, mergedData)
return(data)
}
agregarSujetos <- function(mergedData) {
subjTest <- read.table(paste(getwd(), "/test/subject_test.txt", sep=""))
subjTrain <- read.table(paste(getwd(), "/train/subject_train.txt", sep=""))
subjects <- rbind(subjTest, subjTrain)[,1]
data <- cbind(Sujeto = subjects, mergedData)
return(data)
}
generarArchivo <- function(mergedData) {
library(dplyr)
data <- mergedData %>% group_by(Sujeto, Actividad) %>% summarise_each(funs(mean))
write.table(data, row.name = FALSE, file = "clearData.txt")
}
data1 <- analizarArchivo(paste(getwd(), "/test/X_test.txt", sep=""))
data2 <- analizarArchivo(paste(getwd(), "/train/X_train.txt", sep=""))
?subset
?summarise_each
?getsub
?gsub
setwd("/Users/Laura/Documents/Programacion_Actuarial_III/UCI HAR Dataset")
analizarArchivo <- function(ruta) {
featuresName <- read.table(paste(getwd(), "/features.txt", sep=""))[,2]
#wanted1 <- grepl("mean", featuresName)
#wanted2 <- grepl("std", featuresName)
wanted <- grepl('-(mean|std)\\(', featuresName)
data <- read.table(ruta)
colnames(data) <- featuresName
resultData <- subset(data, select=wanted)
return (resultData)
}
agregarActividades <- function(mergedData) {
actTest <- read.table(paste(getwd(), "/test/y_test.txt", sep=""))
actTrain <- read.table(paste(getwd(), "/train/y_train.txt", sep=""))
activities <- rbind(actTest, actTrain)[,1]
labels <- c("WALKING", "WALKING_UPSTAIRS", "WALKING_DOWNSTAIRS", "SITTING", "STANDING",
"LAYING")
activities <- labels[activities]
data <- cbind(Actividad = activities, mergedData)
return(data)
}
agregarSujetos <- function(mergedData) {
subjTest <- read.table(paste(getwd(), "/test/subject_test.txt", sep=""))
subjTrain <- read.table(paste(getwd(), "/train/subject_train.txt", sep=""))
subjects <- rbind(subjTest, subjTrain)[,1]
data <- cbind(Sujeto = subjects, mergedData)
return(data)
}
generarArchivo <- function(mergedData) {
library(dplyr)
data <- mergedData %>% group_by(Sujeto, Actividad) %>% summarise_each(funs(mean))
write.table(data, row.name = FALSE, file = "clearData.txt")
}
data1 <- analizarArchivo(paste(getwd(), "/test/X_test.txt", sep=""))
data2 <- analizarArchivo(paste(getwd(), "/train/X_train.txt", sep=""))
mergedData <- rbind(data1, data2)
colnames(mergedData) <- gsub("mean", "Media", colnames(mergedData))
colnames(mergedData) <- gsub("std", "STD", colnames(mergedData))
colnames(mergedData) <- gsub("t", "Tiempo", colnames(mergedData))
colnames(mergedData) <- gsub("f", "Frecuencia", colnames(mergedData))
colnames(mergedData) <- gsub("BodyBody", "Cuerpo", colnames(mergedData))
colnames(mergedData) <- gsub("Body", "Cuerpo", colnames(mergedData))
mergedData <- agregarActividades(mergedData)
mergedData <- agregarSujetos(mergedData)
generarArchivo(mergedData)
limpio <- read.table("clearData.txt
limpio <- read.table("clearData.txt")
view(limpio)
generarArchivo(mergedData)
limpio <- read.table("clearData.txt")
View(limpio)
setwd("/Users/Laura/Documents/Programacion_Actuarial_III/Caso3/UCI HAR Dataset")
analizarArchivo <- function(ruta) {
featuresName <- read.table(paste(getwd(), "/features.txt", sep=""))[,2]
#wanted1 <- grepl("mean", featuresName)
#wanted2 <- grepl("std", featuresName)
wanted <- grepl('-(mean|std)\\(', featuresName)
data <- read.table(ruta)
colnames(data) <- featuresName
resultData <- subset(data, select=wanted)
return (resultData)
}
agregarActividades <- function(mergedData) {
actTest <- read.table(paste(getwd(), "/test/y_test.txt", sep=""))
actTrain <- read.table(paste(getwd(), "/train/y_train.txt", sep=""))
activities <- rbind(actTest, actTrain)[,1]
labels <- c("WALKING", "WALKING_UPSTAIRS", "WALKING_DOWNSTAIRS", "SITTING", "STANDING",
"LAYING")
activities <- labels[activities]
data <- cbind(Actividad = activities, mergedData)
return(data)
}
agregarSujetos <- function(mergedData) {
subjTest <- read.table(paste(getwd(), "/test/subject_test.txt", sep=""))
subjTrain <- read.table(paste(getwd(), "/train/subject_train.txt", sep=""))
subjects <- rbind(subjTest, subjTrain)[,1]
data <- cbind(Sujeto = subjects, mergedData)
return(data)
}
generarArchivo <- function(mergedData) {
library(dplyr)
data <- mergedData %>% group_by(Sujeto, Actividad) %>% summarise_each(funs(mean))
write.table(data, row.name = FALSE, file = "clearData.txt")
}
data1 <- analizarArchivo(paste(getwd(), "/test/X_test.txt", sep=""))
data2 <- analizarArchivo(paste(getwd(), "/train/X_train.txt", sep=""))
mergedData <- rbind(data1, data2)
colnames(mergedData) <- gsub("mean", "Media", colnames(mergedData))
colnames(mergedData) <- gsub("std", "STD", colnames(mergedData))
colnames(mergedData) <- gsub("t", "Tiempo", colnames(mergedData))
colnames(mergedData) <- gsub("f", "Frecuencia", colnames(mergedData))
colnames(mergedData) <- gsub("BodyBody", "Cuerpo", colnames(mergedData))
colnames(mergedData) <- gsub("Body", "Cuerpo", colnames(mergedData))
mergedData <- agregarActividades(mergedData)
mergedData <- agregarSujetos(mergedData)
generarArchivo(mergedData)
limpio <- read.table("clearData.txt")
View(limpio)
