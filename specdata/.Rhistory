cuentaarriba
cuentaabajo
cuentaarriba <- 0
cuentaabajo <- 0
bla<-vector("numeric")
for (p in 1:100){
z <- 5
i <- 1
bla[[i]] <- c(z)
while(z>=3 && z<=10){
moneda <- rbinom(1,1,0.5)
if (moneda==1){ #Caminata Aleatoria
z <- z + 0.5
bla[[i]] <- c(z)
i <- i + 1
}else{
z <- z - 0.5
bla[[i]] <- c(z)
i <- i + 1
}
if (bla[[i]]==10.5){
cuentaarriba <- cuentaarriba + 1
}
if (bla[[i]]==2.5){
cuentaabajo <- cuentaabajo + 1
}
}
}
cuentaarriba
cuentaabajo
mayor<-0
menor<-0
for (j in 1 :100){
z<- 5
i=1
x[[i]]<-c(z)
while (z>=3 && z<=10){
moneda <- rbinom(1,1,0.5)
if (moneda==1){ #Caminata aleatoria
z<-z+0.5
x[[i]]<-c(z)
i=i+1
}else {
z<-z-0.5
x[[i]]<-c(z)
i=i+1
}
if (x[[i]]==10.5){
mayor=mayor+1
}
if (x[[i]]==2.5){
menor=menor+1
}
}
}
mayor
menor
cuentaarriba <- 0
cuentaabajo <- 0
bla<-vector("numeric")
for (p in 1:100){
z <- 5
i <- 1
bla[[i]] <- c(z)
while(z>=3 && z<=10){
moneda <- rbinom(1,1,0.5)
if (moneda==1){ #Caminata Aleatoria
z <- z + 0.5
bla[[i]] <- c(z)
i <- i + 1
}else{
z <- z - 0.5
bla[[i]] <- c(z)
i <- i + 1
}
if (bla[[i]]==10.5){
cuentaarriba <- cuentaarriba + 1
}
if (bla[[i]]==2.5){
cuentaabajo <- cuentaabajo + 1
}
}
}
cuentaarriba
cuentaabajo
cuentaarriba <- 0
cuentaabajo <- 0
for (a in 1:100){
z <- 5
i= 1
bla[[i]] <- c(z)
while(z>=3 && z<=10){
moneda <- rbinom(1,1,0.5)
if (moneda==1){ #Caminata Aleatoria
z <- z + 0.5
bla[[i]] <- c(z)
i <- i + 1
}else{
z <- z - 0.5
bla[[i]] <- c(z)
i <- i + 1
}
if (bla[[i]]==10.5){
cuentaarriba <- cuentaarriba + 1
}
if (bla[[i]]==2.5){
cuentaabajo <- cuentaabajo + 1
}
}
}
cuentaarriba
cuentaabajo
cuentaarriba <- 0
cuentaabajo <- 0
for (a in 1:100){
z <- 5
i= 1
bla[[i]] <- c(z)
while(z>=3 && z<=10){
moneda <- rbinom(1,1,0.5)
if (moneda==1){ #Caminata Aleatoria
z <- z + 0.5
bla[[i]] <- c(z)
i=i + 1
}else{
z <- z - 0.5
bla[[i]] <- c(z)
i= i + 1
}
if (bla[[i]]==10.5){
cuentaarriba=cuentaarriba + 1
}
if (bla[[i]]==2.5){
cuentaabajo= cuentaabajo + 1
}
}
}
cuentaarriba
cuentaabajo
mayor<-0
menor<-0
for (j in 1 :100){
z<- 5
i=1
x[[i]]<-c(z)
while (z>=3 && z<=10){
moneda <- rbinom(1,1,0.5)
if (moneda==1){ #Caminata aleatoria
z<-z+0.5
x[[i]]<-c(z)
i=i+1
}else {
z<-z-0.5
x[[i]]<-c(z)
i=i+1
}
if (x[[i]]==10.5){
mayor=mayor+1
}
if (x[[i]]==2.5){
menor=menor+1
}
}
}
mayor
menor
s<-0
t<-0
for(i in 1:100){
z <- 5
ce<-vector("numeric")
while (z >= 3 && z <= 10) {
moneda <- rbinom(1,1,0.5) #Genera números aleatorios
if (moneda == 1){#Caminata Aleatoria
z <- z + 0.5
} else {
z <- z - 0.5
}
ce<-c(z)
if (ce<3){
s <- s + 1
} else { if( ce>10){
t <- t + 1
}
}
}
}
s<-0
t<-0
for(i in 1:100){
z <- 5
ce<-vector("numeric")
while (z >= 3 && z <= 10) {
moneda <- rbinom(1,1,0.5) #Genera números aleatorios
if (moneda == 1){#Caminata Aleatoria
z <- z + 0.5
} else {
z <- z - 0.5
}
ce<-c(z)
if (ce<3){
s <- s + 1
} else { if( ce>10){
t <- t + 1
}
}
}
}
s #Donde s es "abajo".
t #Donde t es "arriba".
cuentaarriba <- 0
cuentaabajo <- 0
bla<-vector("numeric")
for (p in 1:100){
z <- 5
while(z>=3 && z<=10){
moneda <- rbinom(1,1,0.5)
if (moneda==1){ #Caminata Aleatoria
z <- z + 0.5
}else{
z <- z - 0.5
}
if (bla(z)==10.5){
cuentaarriba <- cuentaarriba + 1
}
if (bla(z)==2.5){
cuentaabajo <- cuentaabajo + 1
}
}
}
cuentaarriba
cuentaabajo
cuentaarriba <- 0
cuentaabajo <- 0
bla <-vector("numeric")
for (p in 1:100){
z <- 5
while(z>=3 && z<=10){
moneda <- rbinom(1,1,0.5)
if (moneda==1){ #Caminata Aleatoria
z <- z + 0.5
}else{
z <- z - 0.5
}
bla <- c(z)
if (bla(z)==10.5){
cuentaarriba <- cuentaarriba + 1
}
if (bla(z)==2.5){
cuentaabajo <- cuentaabajo + 1
}
}
}
cuentaarriba
cuentaabajo
cuentaarriba <- 0
cuentaabajo <- 0
bla <-vector("numeric")
for (p in 1:100){
z <- 5
while(z>=3 && z<=10){
moneda <- rbinom(1,1,0.5)
if (moneda==1){ #Caminata Aleatoria
z <- z + 0.5
}else{
z <- z - 0.5
}
bla <- c(z)
if (bla==10.5){
cuentaarriba <- cuentaarriba + 1
}
if (bla==2.5){
cuentaabajo <- cuentaabajo + 1
}
}
}
cuentaarriba
cuentaabajo
cuentaarriba <- 0
cuentaabajo <- 0
bla <-vector("numeric")
for (p in 1:100){
z <- 5
while(z>=3 && z<=10){
moneda <- rbinom(1,1,0.5)
if (moneda==1){ #Caminata Aleatoria
z <- z + 0.5
}else{
z <- z - 0.5
}
bla <- c(z)
if (bla==10.5){
cuentaarriba <- cuentaarriba + 1
}
if (bla==2.5){
cuentaabajo <- cuentaabajo + 1
}
}
}
cuentaarriba
cuentaabajo
if (cuentaarriba>cuentaabajo){
x<- "Salió más veces por arriba"
x
else
x <- "Salió más veces por abajo"
x
}
cuentaarriba <- 0
cuentaabajo <- 0
bla <-vector("numeric")
for (p in 1:100){
z <- 5
while(z>=3 && z<=10){
moneda <- rbinom(1,1,0.5)
if (moneda==1){ #Caminata Aleatoria
z <- z + 0.5
}else{
z <- z - 0.5
}
bla <- c(z)
if (bla==10.5){
cuentaarriba <- cuentaarriba + 1
}
if (bla==2.5){
cuentaabajo <- cuentaabajo + 1
}
}
}
cuentaarriba
cuentaabajo
suma2 <- function(x,y){
x + y
}
mayor10 <- function(x){
x[x>10]
}
mayor10(runif(100,5,15))
promedioCol <- function(x, quitar.NA= TRUE){
nc <- ncol(x)
medias <- vector("numeric",nc)
for (i in 1:nc){
medias[i] <- mean(x[,i], na.rm=quitar.NA)
}
}
promedioCol(c(1,2,3,na))
promedioCol(c(1,2,3,NA))
promedioCol <- function(x, quitar.NA= TRUE){
nc <- ncol(x)
medias <- vector("numeric",nc)
for (i in 1:nc){
medias[i] <- mean(x[,i], na.rm=quitar.NA)
}
}
promedioCol <- function(x, quitar.NA= TRUE){
nc <- ncol(x)
medias <- vector("numeric",nc)
for (i in 1:nc){
medias[i] <- mean(x[,i], na.rm=quitar.NA)
}
medias
}
promedioCol(as.matrix(c(1,2,3,NA)))
f <- function(a,b){
a^2
}
f(2)
f(2,NA)
f(2,1)
f <- function(a,b){
print(a)
print(b)
}
?plot
?colapse
?paste
mediacontaminante <- function(directorio="/Users/Laura/Documents/Programacion_Actuarial_III/specdata",contaminante,id=1:332){
datos <- read.csv(directorio)
if (contaminante=="sulfato"){
suma<-0
for (i in id){
x<-read.csv(paste(directorio, "/", formatC(i,width=3,flag=0),".csv",sep=""))
suma<-mean(x[ ,2],na.rm=TRUE)
}
promedio<-suma/length(id)
promedio
}
}
mediacontaminante(contaminante = "sulfato")
mediacontaminante <- function(directorio,contaminante, id=1:332){
x <- vector("numeric")
suma <- 0
for (a in id){
if(a<10){
x <- paste("00",a,".csv", sep="")}
if (a>=10 && a<100){
x<- paste("0",a, ".csv", sep="")
}
else {
x <- paste(a, ".csv", sep="")
}
datos <- read.csv(x)
y<-c(datos[,contaminante])
otrovector <- c(y,na.rm=TRUE)
media <- mean(otrovector)
suma <- media + suma
}
resultado <- suma/length(id)
resultado
}
mediacontaminante("specdata","sulfate",2)
mediacontaminante <- function(directorio,contaminante, id=1:332){
x <- vector("numeric")
suma <- 0
for (a in id){
if(a<10){
x <- paste("00",a,".csv", sep="")}
datos <- read.csv(x)
if (a>=10 && a<100){
x<- paste("0",a, ".csv", sep="")
datos <- read.csv(x)
}
else {
x <- paste(a, ".csv", sep="")
datos <- read.csv(x)
}
y<-c(datos[,contaminante])
otrovector <- c(y,na.rm=TRUE)
media <- mean(otrovector)
suma <- media + suma
}
resultado <- suma/length(id)
resultado
}
mediacontaminante("specdata",sulfate,1)
mediacontaminante("specdata","sulfate",1)
getwd
getwd()
setwd("/Users/Laura/Documents/Programacion_Actuarial_III/specdata")
mediacontaminante <- function(directorio,contaminante, id=1:332){
x <- vector("numeric")
suma <- 0
for (a in id){
if(a<10){
x <- paste("00",a,".csv", sep="")}
datos <- read.csv(x)
if (a>=10 && a<100){
x<- paste("0",a, ".csv", sep="")
datos <- read.csv(x)
}
else {
x <- paste(a, ".csv", sep="")
datos <- read.csv(x)
}
y<-c(datos[,contaminante])
otrovector <- c(y,na.rm=TRUE)
media <- mean(otrovector)
suma <- media + suma
}
resultado <- suma/length(id)
resultado
}
mediacontaminante("specdata","sulfate",1)
mediacontaminante <- function(directorio,contaminante, id=1:332){
x <- vector("numeric")
suma <- 0
for (a in id){
if(a<10){
x <- paste("00",a,".csv", sep="")}
datos <- read.csv(x)
if (a>=10 && a<100){
x<- paste("0",a, ".csv", sep="")
datos <- read.csv(x)
}
else {
x <- paste(a, ".csv", sep="")
datos <- read.csv(x)
}
y<-c(datos[,contaminante])
otrovector <- c(y,na.rm=TRUE)
media <- mean(otrovector)
suma <- media + suma
}
resultado <- suma/length(id)
resultado
}
mediacontaminante("specdata","nitrate",1)
View(mediacontaminante)
x <- paste("00",a,".csv", sep="")}
mediacontaminante <- function(directorio,contaminante, id=1:332){
x <- vector("numeric")
suma <- 0
for (a in id){
if(a<10){
x <- paste("00",a,".csv", sep="")}
datos <- read.csv(x)
if (a>=10 && a<100){
x<- paste("0",a, ".csv", sep="")
datos <- read.csv(x)
}
else {
x <- paste(a, ".csv", sep="")
datos <- read.csv(x)
}
y<-c(datos[,contaminante])
otrovector <- c(y,na.rm=TRUE)
media <- mean(otrovector)
suma <- media + suma
}
resultado <- suma/length(id)
resultado
}
